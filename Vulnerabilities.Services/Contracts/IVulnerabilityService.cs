
namespace Vulnerabilities.Services.Contracts
{
    using System.Collections.Generic;
    using Vulnerabilities.Services.Models.MPCconfigModels;
    using Vulnerabilities.Services.Models.MPCpatchModels;
    using Vulnerabilities.Services.Models.StandardEnvironment;

    public interface IVulnerabilityService
    {
        IEnumerable<VulnerabilityListingModel> AllVulnerabilities();
        IEnumerable<VulnerabilityListingModelMpcConfig> AllVulnerabilitiesMpcConfig();
        IEnumerable<VulnerabilityListingModelMpcPatch> AllVulnerabilitiesMpcPatch();

        void AddNote(int id, string name, string Note);
        void AddNoteMpcConfig(int id, string name, string Note);
        void AddNoteMpcPatch(int id, string name, string Note);

        VulnerabilityEditNote AddNoteById(int? id);
        VulnerabilityEditNoteMpcConfig AddNoteByIdMpcConfig(int? id);
        VulnerabilityEditNoteMpcPatch AddNoteByIdMpcPatch(int? id);

        bool Exists(int id);
        bool ExistsMpcConfig(int id);
        bool ExistsMpcPatch(int id);

        VulnerabilityDetailsModel FindVulnerabilityById(int? id);
        VulnerabilityDetailsModelMpcConfig FindVulnerabilityByIdMpcConfig(int? id);
        VulnerabilityDetailsModelMpcPatch FindVulnerabilityByIdMpcPatch(int? id);
        

        Dictionary<string, int> AffectedServersCountPerMonth(int?id);

        //void ShowDetails(int id);
    }
}
